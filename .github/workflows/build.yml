on:
  push:
    branches:
    - '*'
  paths:
    include:
    - back/jukebox/*
pool:
  vmImage: 'ubuntu-latest'    



variables:
  dockerRegistryServiceConnection:  ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  imageRepository: 'status.publicar.toutbox.worker'
  containerRegistry: 'passarelacontainers.azurecr.io'
  projectPath: '$(Build.SourcesDirectory)/backend/Status.Publicar.Toutbox.Worker/*.csproj'
  dockerfilePath: '$(Build.SourcesDirectory)/src/Status.Publicar.Toutbox.Worker/Dockerfile'
  nugetfilePath: '$(Build.SourcesDirectory)/src/Status.Publicar.Toutbox.Worker/nuget.config'
  tag: '$(Build.BuildId)'
  buildConfiguration: 'Release'
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildTest
  displayName: Build and Tests
  jobs:
    - job: BuildTest
      displayName: Build and Tests
      pool:
        vmImage: $(vmImageName)

      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Restore...'
        inputs:
          command: 'restore'
          projects: $(projectPath)
          feedsToUse: config
          nugetConfigPath: $(nugetfilePath)

      - task: DotNetCoreCLI@2
        displayName: 'Build...'
        inputs:
          command: 'build'
          projects: $(projectPath)
          arguments: '--configuration $(buildConfiguration)'

- stage: Build
  dependsOn: BuildTest
  displayName: Build and Push
  jobs:
  - job: Build
    displayName: Build and Push...
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          lastest
